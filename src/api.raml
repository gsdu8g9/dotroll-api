#%RAML 0.8
---
title: DotRoll API
version: "sandbox"
baseUri: https://webservices.dotroll.com/rest/{version}
protocols: [ HTTPS ]
securitySchemes:
  - basic:
      description: |
        The DotRoll API uses Basic Auth for authentication. An authorization header containing
        valid base64 encoded credentials must be included in every request.
      type: Basic Authentication
      describedBy:
        headers:
          Authorization:
            description: Used to send valid Basic Auth credentials.
            type: string
traits:
  - secured:
      usage: Apply this to all method to use API key authentication.
      description: All API requests require this type of authentication as well.
      queryParameters:
        api_key:
          description: Used to send an API key along with the credentials.
          type: string
          required: true
          minLength: 160
          maxLength: 160
          example: kk20ff321d77e5065fasd0d61fd89e4b
      responses:
        401:
          description: API key authentication failed.
          body:
            application/json:
              example: !include api/example/authentication_failed.json
              schema: !include api/schema/authentication_failed.json
            text/xml:
              schema: !include api/schema/authentication_failed.xsd
              example: !include api/example/authentication_failed.xml
        500:
          description: Basic Authentication failed
  - typed:
      usage: Apply this to all method to support multiple return types.
      description: Adds a key to the request defining returned content type.
      queryParameters:
        fmt:
          description: Used to define the returned content type.
          enum: [ 'json', 'xml' ]
resourceTypes:
  - priceList:
      uriParameters:
        currency:
          description: Supported ISO 4217 currency.
          enum: [ 'HUF', 'EUR', 'USD' ]
securedBy: [ basic ]
mediaType: application/json
/domain:
  /search:
    /{domain}:
      is: [ secured, typed ]
      uriParameters:
        domain:
          description: Domain you are looking for.
          type: string
      description: Search for a domain if it is already registered.
      get:
        responses:
          200:
            description: Domain search is successful.
            body:
              application/json:
                schema: !include api/schema/domain/search.json
                example: !include api/example/domain/search.json
              text/xml:
                schema: !include api/schema/domain/search.xsd
                example: !include api/example/domain/search.xml
  /prices:
    /{currency}:
      type: priceList
      is: [ secured, typed ]
      description: Returns DotRoll domain prices.
      get:
        responses:
          200:
            description: Retrieving prices is successful.
            body:
              application/json:
                schema: !include api/schema/domain/prices.json
                example: !include api/example/domain/prices.json
              text/xml:
                schema: !include api/schema/domain/prices.xsd
                example: !include api/example/domain/prices.xml
  /list:
    is: [ secured, typed ]
    description: Returns list of registered domains.
    get:
      responses:
        200:
          description: Retrieving list is successful.
          body:
            application/json:
              schema: !include api/schema/domain/list.json
              example: !include api/example/domain/list.json
            text/xml:
              schema: !include api/schema/domain/list.xsd
              example: !include api/example/domain/list.xml
/hosting:
  /prices:
    /{currency}:
      type: priceList
      is: [ secured, typed ]
      description: Returns DotRoll hosting prices.
      get:
        responses:
          200:
            description: Retrieving prices is successful.
            body:
              application/json:
                schema: !include api/schema/hosting/prices.json
                example: !include api/example/hosting/prices.json
              text/xml:
                schema: !include api/schema/hosting/prices.xsd
                example: !include api/example/hosting/prices.xml
/vps:
  /prices:
    /{currency}:
      type: priceList
      is: [ secured, typed ]
      description: Returns DotRoll VPS prices.
      get:
        responses:
          200:
            description: Retrieving prices is successful.
            body:
              application/json:
                schema: !include api/schema/vps/prices.json
                example: !include api/example/vps/prices.json
              text/xml:
                schema: !include api/schema/vps/prices.xsd
                example: !include api/example/vps/prices.xml
